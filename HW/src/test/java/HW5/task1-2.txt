Урок 5. Другие виды тестирования
=====================================================================

Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет
    пользователям добавлять, редактировать и удалять контакты.
    Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для 
    этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

Решение:
    Приложение Записная книжка должна содержать несколько основных классов: Контакты, Сервис и Репозиторий.
    Для них и будем создавать тесты.
    - проверка правильности создания объекта класса Контакт (юнит-тест);
    - проверка правильности добавления объекта Контакт в репозиторий (юнит-тест);
    - проверка правильности редактирования объекта Контакт в репозитории (юнит-тест);
    - проверка правильности удаления объекта Контакт из репозитория (юнит-тест);
    - проверка правильности поиска объекта Контакт в репозитории (юнит-тест);
    - проверка класса Сервис на правильность вызова нужных методов класса Репозиторий при добавлении, редактировании и
        удалении объектов Контакт из репозитория (юнит-тест);
    - проверка вывода всех объектов Контакт из репозитория (Интеграционный тест);
    - проверка создания через интерфейс пользователя Контакта в системе (сквозной тест);
    - проверка редактирования через интерфейс пользователя Контакта в системе (сквозной тест);
    - проверка удаления через интерфейс пользователя Контакта из системы (сквозной тест);
    - проверка поиска через интерфейс пользователя Контакта в системе (сквозной тест);


*Задание 2. *Ниже список тестовых сценариев.
Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.

1. Проверка того, что функция addContact корректно добавляет новый контакт в список контактов"".
2. Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов"".
3. Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление"".

Решение:
    1. Это юнит-тест, т.к. реализацию данной функции делают в рамках одного модуля;
    2. Это сквозной тест, т.к. используется интерфейс пользователя для ввода и отображения результата;
    3. Проверку полного цикла работы с контактом с взаимодействием всех модулей при условии, что не используется интерфейс пользователя,
        можно организовать с помощью интеграционных тестов.


